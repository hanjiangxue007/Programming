#!/usr/bin/env Rscript
#!/usr/bin/env Rscript
# Bhishan Poudel
# Jan 7, 2016
# clear; Rscript eg1.r
x <- c(1,2,3,4,5,6)   # Create ordered collection (vector) (input are <- or = sign)
y = x^2               # Square the elements of x
cat("The value of y is given below\n")
print(y)              # print (vector) y
source('~/Copy/Programming/R/rprograms/eg1.r')
source('~/Copy/Programming/R/rprograms/plotting/autosPlot.r')
source('~/Copy/Programming/R/rprograms/plotting/autosPlot.r')
source('~/Copy/Programming/R/rprograms/plotting/autosPlot.r')
source('~/Copy/Programming/R/rprograms/plotting/autosPlot.r')
source('~/Copy/Programming/R/rprograms/plotting/plot1.r')
source('plot1.r')
pwd
getwd()
#!/usr/bin/Rscript
source('~/Copy/Programming/R/rprograms/Basics/string.r')
# Bhishan Poudel
# Jan 5, 2016
# clear; Rscript string.r; rm *~
#Extracting Pieces of Strings
st <- dimnames(state.x77)[[1]] # State names, from built-in dataset
print(st[1:5])
# "Alabama"    "Alaska"     "Arizona"    "Arkansas"   "California"
st <- st[1:5]               # Let's just use these five for now
print(substring (st, 1, 3)) # Give me the first three characters from each
# "Ala" "Ala" "Ari" "Ark" "Cal"
print(substring (st, 1:5, 3:7)) # Give me 1:3 from the first, 2-4 from the second...
# "Ala" "las" "izo" "ana" "for"
print(substring (st, nchar(st) - 2, nchar(st))) # Give me the last three
# "ama" "ska" "ona" "sas" "nia"
# function to evalutate string as numeric
str_eval=function(x) {return(eval(parse(text=x)))}
print(str_eval("1:10"))
#eval_str("print(“hi”)")  # double quote in this function doesnot work
print(str_eval("print('hi')")) # but, single quote works
# function to convert _ to .
#####################################################################3
strsplit ("Nospaces", "s")
strsplit ("Nospaces", "s")
strsplit ("Nospaces", "s")
strsplit ("Nospaces", "s")
source('~/Copy/Programming/R/rprograms/Basics/dataTypes.r')
setwd("~/")
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
addinexamples:::reformatAddin()
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
install.packages("rstudioapi", type = "source")
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
addinexamples:::reformatAddin()
addinexamples:::subsetAddin()
addinexamples:::reformatAddin()
addinexamples:::findAndReplaceAddin()
View(bhishan)
View(bhishan)
source('~/.Rprofile')
View(bhishan)
View(bhishan)
addinexamples:::subsetAddin()
addinexamples:::findAndReplaceAddin()
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
source('~/Copy/Programming/R/rprograms/plotting/abline/a.R')
source('~/Copy/Programming/R/rprograms/plotting/abline/abline1.r')
View(bhishan)
View(bhishan)
source('~/Copy/Programming/R/rprograms/plotting/abline/abline1.r')
